{"version":3,"file":"e5e52c54-f09fdcd784de2a5e3f18.js","mappings":"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","sources":["webpack://demo/../packages/gatsby-theme-newrelic/src/pages/404.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { css } from '@emotion/react';\r\nimport { navigate } from 'gatsby-link';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\n\r\nimport GlobalHeader from '../components/GlobalHeader';\r\nimport GlobalFooter from '../components/GlobalFooter';\r\nimport Link from '../components/Link';\r\nimport SearchInput from '../components/SearchInput';\r\nimport Tag from '../components/Tag';\r\nimport CreateIssueButton from '../components/CreateIssueButton';\r\nimport Button from '../components/Button';\r\nimport getLocale from '../../gatsby/utils/getLocale';\r\nimport useThemeTranslation from '../hooks/useThemeTranslation';\r\nimport Trans from '../components/Trans';\r\nimport useTessen from '../hooks/useTessen';\r\n\r\nconst NotFoundPage = ({\r\n  location,\r\n  pageContext: { themeOptions, swiftypeEngineKey },\r\n}) => {\r\n  const {\r\n    site: {\r\n      siteMetadata: { siteUrl },\r\n    },\r\n  } = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  const { t: translate } = useThemeTranslation();\r\n  const [searchTerm, setSearchTerm] = useState(null);\r\n  const [searchResult, setSearchResult] = useState(null);\r\n  const tessen = useTessen();\r\n\r\n  const pageLocale = getLocale({ location }, themeOptions);\r\n\r\n  const hostname = new URL(siteUrl).hostname;\r\n  const nrSubDomain = /.*\\.newrelic\\.com/.test(hostname)\r\n    ? hostname.split('.')[0]\r\n    : null;\r\n\r\n  const searchTermFilter = useCallback(\r\n    (term) => {\r\n      const termsToIgnore = ['docs', pageLocale];\r\n\r\n      if (!term || termsToIgnore.includes(term)) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    },\r\n    [pageLocale]\r\n  );\r\n\r\n  const getSearchResults = useCallback(async () => {\r\n    const localePostFix = () => {\r\n      return pageLocale === 'en' ? '' : `-${pageLocale}`;\r\n    };\r\n\r\n    const search = async () => {\r\n      const res = await fetch(\r\n        'https://search-api.swiftype.com/api/v1/public/engines/search.json',\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            q: searchTerm,\r\n            engine_key: swiftypeEngineKey,\r\n            per_page: 5,\r\n            filters: {\r\n              page: {\r\n                type: [\r\n                  `docs${localePostFix()}`,\r\n                  `developers${localePostFix()}`,\r\n                  `opensource${localePostFix()}`,\r\n                  `quickstarts${localePostFix()}`,\r\n                ],\r\n                document_type: [\r\n                  '!views_page_menu',\r\n                  '!term_page_api_menu',\r\n                  '!term_page_landing_page',\r\n                ],\r\n              },\r\n            },\r\n          }),\r\n        }\r\n      );\r\n\r\n      const { records } = await res.json();\r\n\r\n      return records.page;\r\n    };\r\n\r\n    if (searchTerm !== null) {\r\n      const results = await search();\r\n      const trimmedResults = results.map((r) => {\r\n        return { url: r.url, title: r.title, type: r.type };\r\n      });\r\n\r\n      setSearchResult(trimmedResults);\r\n    }\r\n  }, [pageLocale, searchTerm, swiftypeEngineKey]);\r\n\r\n  const displaySearchResults = (locale) => {\r\n    if (!searchResult || searchResult.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div id=\"search-results\">\r\n        {translate('404.searchResultMessage')}\r\n        <ul\r\n          css={css`\r\n            list-style-type: none;\r\n            margin: 0;\r\n            padding: 0;\r\n            line-height: 1.75rem;\r\n            margin-top: 1rem;\r\n          `}\r\n        >\r\n          {searchResult.map((result, index) => {\r\n            return (\r\n              <li key={`result-${index}`}>\r\n                <div>\r\n                  <Link\r\n                    to={result.url}\r\n                    css={css`\r\n                      text-decoration: none;\r\n                    `}\r\n                    instrumentation={{\r\n                      component: '404SuggestedLink',\r\n                      href: result.url,\r\n                      searchTerm,\r\n                    }}\r\n                    displayExternalIcon\r\n                  >\r\n                    {result.title}\r\n                  </Link>\r\n                </div>\r\n                <Tag\r\n                  css={css`\r\n                    font-size: 0.625rem;\r\n                    margin-right: 0.5em;\r\n                  `}\r\n                  uppercase\r\n                >\r\n                  {result.type?.replace(`-${locale}`, '').replace('_', ' ')}\r\n                </Tag>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchTerm(\r\n      location.pathname.split('/').filter(searchTermFilter).join(' ')\r\n    );\r\n  }, [searchTermFilter, location.pathname]);\r\n\r\n  useEffect(() => {\r\n    getSearchResults();\r\n  }, [getSearchResults, searchTerm]);\r\n\r\n  useEffect(() => {\r\n    if (searchResult) {\r\n      tessen.track({\r\n        eventName: 'error404',\r\n        category: 'ErrorPage',\r\n        path: location.pathname,\r\n        resultCount: searchResult.length,\r\n        searchTerm,\r\n      });\r\n    }\r\n  }, [location.pathname, searchResult, searchTerm]);\r\n\r\n  return (\r\n    <>\r\n      <GlobalHeader />\r\n      <div\r\n        css={css`\r\n          display: grid;\r\n          grid-template-columns: 1fr 1fr 1fr 1fr;\r\n          grid-template-rows: auto;\r\n          grid-template-areas:\r\n            '. . . .'\r\n            '. content content .'\r\n            'footer footer footer footer';\r\n          min-height: calc(100vh - var(--global-header-height));\r\n          max-height: calc(100vh - var(--global-header-height));\r\n        `}\r\n      >\r\n        <div\r\n          css={css`\r\n            display: flex;\r\n            grid-area: content;\r\n            justify-self: start;\r\n          `}\r\n        >\r\n          <div\r\n            css={css`\r\n              font-size: 0.85rem;\r\n              padding: 8rem 0;\r\n            `}\r\n          >\r\n            <h1\r\n              css={css`\r\n                font-weight: normal;\r\n                line-height: 1;\r\n              `}\r\n            >\r\n              {translate('404.headingText')}\r\n            </h1>\r\n\r\n            <div\r\n              id=\"search-section\"\r\n              css={css`\r\n                margin-top: 2rem;\r\n                margin-bottom: 2rem;\r\n              `}\r\n            >\r\n              {translate('404.searchInputLabel')}\r\n              <SearchInput\r\n                placeholder={searchTerm}\r\n                onFocus={() =>\r\n                  navigate(`?q=${searchTerm.replaceAll(' ', '+')}`)\r\n                }\r\n                css={css`\r\n                  min-width: 200px;\r\n                  max-width: 2000px;\r\n                  margin-top: 0.5rem;\r\n                  margin-bottom: 0.5rem;\r\n                `}\r\n              />\r\n            </div>\r\n            {displaySearchResults(pageLocale)}\r\n\r\n            <div\r\n              css={css`\r\n                > * {\r\n                  margin: 3em 0;\r\n                }\r\n              `}\r\n            >\r\n              {/* <p>\r\n                {translate('404.docsHomeMessage')}{' '}\r\n                <Link to=\"/\">{{nrSubDomain}} home</Link>.\r\n              </p> */}\r\n              <Trans i18nKey=\"404.docsHomeMessage\" parent=\"p\">\r\n                Go back to <Link to=\"/\">{{ nrSubDomain }} home</Link>.\r\n              </Trans>\r\n              <p>\r\n                {translate('404.fileIssueMessage')}{' '}\r\n                <CreateIssueButton\r\n                  pageTitle=\"404\"\r\n                  variant={Button.VARIANT.OUTLINE}\r\n                  size={Button.SIZE.SMALL}\r\n                  labels={['bug', '404']}\r\n                  instrumentation={{ component: '404Page' }}\r\n                  css={css`\r\n                    margin-left: 1em;\r\n                  `}\r\n                />\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <GlobalFooter\r\n          css={css`\r\n            grid-area: footer;\r\n            align-self: end;\r\n          `}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nNotFoundPage.propTypes = {\r\n  location: PropTypes.shape({\r\n    href: PropTypes.string.isRequired,\r\n    origin: PropTypes.string.isRequired,\r\n    pathname: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  pageContext: PropTypes.shape({\r\n    themeOptions: PropTypes.object.isRequired,\r\n    swiftypeEngineKey: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default NotFoundPage;\r\n"],"names":["locale","location","pageContext","themeOptions","swiftypeEngineKey","siteUrl","useStaticQuery","site","siteMetadata","translate","useThemeTranslation","t","useState","searchTerm","setSearchTerm","searchResult","setSearchResult","tessen","useTessen","pageLocale","getLocale","hostname","URL","nrSubDomain","test","split","searchTermFilter","useCallback","term","includes","getSearchResults","localePostFix","search","fetch","method","headers","body","JSON","stringify","q","engine_key","per_page","filters","page","type","document_type","res","json","records","results","trimmedResults","map","r","url","title","useEffect","pathname","filter","join","track","eventName","category","path","resultCount","length","css","id","placeholder","onFocus","navigate","replaceAll","result","index","key","to","instrumentation","component","href","displayExternalIcon","uppercase","replace","i18nKey","parent","pageTitle","variant","Button","size","labels"],"sourceRoot":""}