{"version":3,"file":"d676735c-5b15c50299a5e2f62f7c.js","mappings":"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","sources":["webpack://demo/./src/pages/index.js"],"sourcesContent":["/* eslint-disable no-alert */\r\nimport React, { useState } from 'react';\r\nimport { css } from '@emotion/react';\r\nimport {\r\n  Button,\r\n  CodeBlock,\r\n  Callout,\r\n  Collapser,\r\n  CollapserGroup,\r\n  ContributingGuidelines,\r\n  Layout,\r\n  Link,\r\n  PageTools,\r\n  RelatedResources,\r\n  SearchInput,\r\n  SimpleFeedback,\r\n  Surface,\r\n  Table,\r\n  Tag,\r\n  TagList,\r\n  Terminal,\r\n  Video,\r\n  useTranslation,\r\n  ExternalLink,\r\n} from '@newrelic/gatsby-theme-newrelic';\r\n\r\nconst codeSample = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ children, ...props }) => (\r\n  <button type=\"button\" className=\"button\" {...props}>{children}</button>\r\n);\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Button;\r\n`;\r\n\r\nconst liveCodeSample = `\r\n<Button variant={Button.VARIANT.PRIMARY} onClick={() => alert('Hello!')}>Hello!</Button>\r\n`;\r\n\r\nconst codeSampleWithAdditionalTags = `\r\nquery AccountQuery(<var>$accountId:</var> ID!) {\r\n  <a href=\"/build-apps\">account</a>(id: <var>$accountId</var>) {\r\n    <a href=\"/build-apps/build-hello-world-app\"><var>name</var></a>\r\n  }\r\n}\r\n`;\r\n\r\nconst anotherSample = `\r\n---\r\napiVersion: v1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: <mark>nri-integration-cfg</mark>\r\n  namespace: default\r\ndata:\r\n<mark>  apache-config.yaml: |\r\n    ---\r\n    # Run auto discovery to find pods with label \"app=apache\"\r\n    # https://docs.newrelic.com/docs/integrations/host-integrations/installation/container-auto-discovery\r\n    discovery:\r\n      command:\r\n        # Use the optional arguments:\r\n        # --namespaces: Comma separated namespaces to discover pods on\r\n        # --tls: Use secure (TLS) connection\r\n        # --port: Port used to connect to the kubelet. Default is 10255\r\n        exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port <var>PORT</var> --tls\r\n        match:\r\n          label.app: apache\r\n    <a href=\"https://one.newrelic.com\">integrations</a>:\r\n      - name: nri-apache\r\n        env:\r\n          # Use the discovered IP as the host address\r\n          STATUS_URL: http://\\${discovery.ip}/server-status?auto\r\n          METRICS: 1</mark>\r\n`;\r\n\r\nconst xmlSample = `\r\n<dependency>\r\n  <groupId>com.newrelic.agent.java</groupId>\r\n  <artifactId>newrelic-java</artifactId>\r\n  <version><var>JAVA_AGENT_VERSION</var></version>\r\n  <scope>provided</scope>\r\n  <type>zip</type>\r\n</dependency>\r\n`;\r\n\r\nconst IndexPage = () => {\r\n  const { t } = useTranslation();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  return (\r\n    <Layout.Main\r\n      css={css`\r\n        display: grid;\r\n        grid-template-columns: minmax(0, 1fr) 320px;\r\n        grid-template-areas: 'content page-tools';\r\n        grid-gap: var(--site-content-padding);\r\n\r\n        @media screen and (max-width: 1280px) {\r\n          grid-template-columns: minmax(0, 1fr);\r\n          grid-template-areas: content;\r\n        }\r\n      `}\r\n    >\r\n      <Layout.Content\r\n        css={css`\r\n          section {\r\n            margin-bottom: 4rem;\r\n          }\r\n        `}\r\n      >\r\n        <h1>{t('home.welcome')}</h1>\r\n        <p>{t('home.intro')}</p>\r\n        <section>\r\n          <h2>Search inputs</h2>\r\n          <SearchInput\r\n            style={{ margin: '1rem 0', maxWidth: '500px' }}\r\n            placeholder=\"Test out a small search\"\r\n            onClear={() => setSearchTerm('')}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            value={searchTerm}\r\n            size={SearchInput.SIZE.SMALL}\r\n          />\r\n          <SearchInput\r\n            style={{ margin: '1rem 0', maxWidth: '500px' }}\r\n            placeholder=\"Test out a medium search\"\r\n            onClear={() => setSearchTerm('')}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            value={searchTerm}\r\n          />\r\n          <SearchInput\r\n            style={{ marginBottom: '1rem', maxWidth: '500px' }}\r\n            placeholder=\"Test out a large search\"\r\n            onClear={() => setSearchTerm('')}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            value={searchTerm}\r\n            size={SearchInput.SIZE.LARGE}\r\n          />\r\n        </section>\r\n        <section>\r\n          <h2>Collapsers</h2>\r\n          <CollapserGroup>\r\n            <Collapser id=\"example-1\" title=\"Check out this cool collapser\">\r\n              This is a pretty neat little utility. I can show all kinds of\r\n              stuff in here.\r\n            </Collapser>\r\n            <Collapser title={<code>api_doc</code>}>\r\n              You can even use JSX in the title\r\n            </Collapser>\r\n            <Collapser title=\"This one is open by default\" defaultOpen>\r\n              And you can see everything inside of it!\r\n            </Collapser>\r\n          </CollapserGroup>\r\n        </section>\r\n        <section>\r\n          <Callout variant={Callout.VARIANT.CAUTION}>\r\n            Danger! Exercise extreme caution.\r\n          </Callout>\r\n          <Callout variant={Callout.VARIANT.IMPORTANT}>\r\n            Important! I said, this is important.\r\n          </Callout>\r\n          <Callout variant={Callout.VARIANT.TIP}>Here's a tip.</Callout>\r\n          <Callout variant={Callout.VARIANT.TIP} title=\"Hello\">\r\n            Here's a tip with a custom title\r\n          </Callout>\r\n          <Callout variant={Callout.VARIANT.TIP} title={null}>\r\n            Here's a tip with no title\r\n          </Callout>\r\n          <Callout variant={Callout.VARIANT.COURSE}>\r\n            This callout is for a guide that is part of a super cool course\r\n          </Callout>\r\n        </section>\r\n        <section>\r\n          <h2>A code block</h2>\r\n          <CodeBlock\r\n            copyable\r\n            lineNumbers\r\n            highlightedLines=\"5-7,11\"\r\n            fileName=\"src/components/Button.js\"\r\n            language=\"jsx\"\r\n            css={css`\r\n              margin-bottom: 2rem;\r\n            `}\r\n          >\r\n            {codeSample}\r\n          </CodeBlock>\r\n          <h2>A live editable code block w/ preview</h2>\r\n          <CodeBlock\r\n            copyable\r\n            lineNumbers\r\n            live\r\n            preview\r\n            fileName=\"src/components/Button.js\"\r\n            language=\"jsx\"\r\n            scope={{ Button }}\r\n            css={css`\r\n              margin-bottom: 2rem;\r\n            `}\r\n          >\r\n            {liveCodeSample}\r\n          </CodeBlock>\r\n          <h2>Code block w/ embedded var/mark/links</h2>\r\n          <CodeBlock\r\n            language=\"graphql\"\r\n            css={css`\r\n              margin-bottom: 1rem;\r\n            `}\r\n          >\r\n            {codeSampleWithAdditionalTags}\r\n          </CodeBlock>\r\n          <CodeBlock\r\n            language=\"yaml\"\r\n            css={css`\r\n              margin-bottom: 1rem;\r\n            `}\r\n          >\r\n            {anotherSample}\r\n          </CodeBlock>\r\n          <CodeBlock language=\"xml\">{xmlSample}</CodeBlock>\r\n        </section>\r\n        <section>\r\n          <h2>Terminal</h2>\r\n          <Terminal>cd packages/gatsby-theme-newrelic</Terminal>\r\n\r\n          <h2>Animated terminal</h2>\r\n          <Terminal animate>\r\n            {`\r\nnr1 create --type nerdpack --name pageviews-app\r\n[output] {success}✔  {plain}Component created successfully!\r\n[output]    {purple}nerdpack {blue}pageviews-app {plain}is available at {green}\"./pageviews-app\"\r\n            `}\r\n          </Terminal>\r\n        </section>\r\n        <section>\r\n          <h2>Buttons</h2>\r\n          <h3>Variants</h3>\r\n          <div\r\n            css={css`\r\n              display: flex;\r\n              flex-wrap: wrap;\r\n              gap: 1rem;\r\n              margin-bottom: 2rem;\r\n              align-items: start;\r\n            `}\r\n          >\r\n            <Button\r\n              onClick={() => alert('Hello!')}\r\n              variant={Button.VARIANT.PRIMARY}\r\n            >\r\n              Primary\r\n            </Button>\r\n            <Button\r\n              onClick={() => alert('Hello!')}\r\n              variant={Button.VARIANT.NORMAL}\r\n            >\r\n              Normal\r\n            </Button>\r\n            <Button\r\n              onClick={() => alert('Hello!')}\r\n              variant={Button.VARIANT.OUTLINE}\r\n            >\r\n              Outline\r\n            </Button>\r\n            <Button\r\n              onClick={() => alert('Hello!')}\r\n              variant={Button.VARIANT.LINK}\r\n            >\r\n              Link\r\n            </Button>\r\n          </div>\r\n          <h3>Sizes</h3>\r\n          <div\r\n            css={css`\r\n              display: flex;\r\n              align-items: flex-start;\r\n              gap: 1rem;\r\n            `}\r\n          >\r\n            <Button\r\n              onClick={() => alert('Hello!')}\r\n              variant={Button.VARIANT.PRIMARY}\r\n            >\r\n              Default\r\n            </Button>\r\n            <Button\r\n              onClick={() => alert('Hello!')}\r\n              variant={Button.VARIANT.PRIMARY}\r\n              size={Button.SIZE.SMALL}\r\n            >\r\n              Small\r\n            </Button>\r\n            <Button\r\n              onClick={() => alert('Hello!')}\r\n              variant={Button.VARIANT.PRIMARY}\r\n              size={Button.SIZE.EXTRA_SMALL}\r\n            >\r\n              Extra small\r\n            </Button>\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <RelatedResources\r\n            resources={[\r\n              {\r\n                url: 'https://newrelic.com/instant-observability/',\r\n                title: 'developer',\r\n              },\r\n            ]}\r\n          />\r\n        </section>\r\n        <section>\r\n          <h2>Primary surfaces</h2>\r\n          <div\r\n            css={css`\r\n              display: grid;\r\n              grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n              grid-gap: 2rem;\r\n              margin-bottom: 2rem;\r\n            `}\r\n          >\r\n            <Surface\r\n              base={Surface.BASE.PRIMARY}\r\n              css={css`\r\n                padding: 2rem;\r\n              `}\r\n            >\r\n              Non-interactive\r\n            </Surface>\r\n            <Surface\r\n              interactive\r\n              base={Surface.BASE.PRIMARY}\r\n              css={css`\r\n                padding: 2rem;\r\n              `}\r\n            >\r\n              Interactive\r\n            </Surface>\r\n          </div>\r\n          <h2>Secondary surfaces</h2>\r\n          <div\r\n            css={css`\r\n              display: grid;\r\n              grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n              grid-gap: 2rem;\r\n              padding: 1rem;\r\n              border-radius: 4px;\r\n              background: var(--secondary-background-color);\r\n            `}\r\n          >\r\n            <Surface\r\n              base={Surface.BASE.SECONDARY}\r\n              css={css`\r\n                padding: 2rem;\r\n              `}\r\n            >\r\n              Non-interactive\r\n            </Surface>\r\n            <Surface\r\n              interactive\r\n              base={Surface.BASE.SECONDARY}\r\n              css={css`\r\n                padding: 2rem;\r\n              `}\r\n            >\r\n              Interactive\r\n            </Surface>\r\n          </div>\r\n          <h2>Surfaces as other elements</h2>\r\n          <div\r\n            css={css`\r\n              display: grid;\r\n              grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n              grid-gap: 2rem;\r\n              padding: 1rem;\r\n            `}\r\n          >\r\n            <Surface\r\n              base={Surface.BASE.PRIMARY}\r\n              to=\"foobar\"\r\n              as={Link}\r\n              css={css`\r\n                padding: 2rem;\r\n              `}\r\n            >\r\n              I'm a link!\r\n            </Surface>\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <h2>Wistia video</h2>\r\n          <Video id=\"inyshp3m7r\" type={Video.TYPE.WISTIA} width=\"500px\" />\r\n          <h2>YouTube video</h2>\r\n          <Video id=\"ZagZfNQYJEU\" type={Video.TYPE.YOUTUBE} width=\"500px\" />\r\n        </section>\r\n        <section>\r\n          <h2>Internal Links</h2>\r\n          <p>\r\n            This <Link to=\"/build-apps\">Internal Link</Link> automatically uses\r\n            localized path if on translated site.\r\n          </p>\r\n          <p>\r\n            This{' '}\r\n            <Link to=\"/build-apps\" shouldAutoLocalize={false}>\r\n              Internal Link\r\n            </Link>{' '}\r\n            does not automatically use localized path if on translated site.\r\n          </p>\r\n        </section>\r\n        <section>\r\n          <h2>External Links</h2>\r\n          <Surface\r\n            base={Surface.BASE.PRIMARY}\r\n            to=\"https://newrelic.com\"\r\n            as={Link}\r\n            css={css`\r\n              padding: 5px;\r\n            `}\r\n            displayExternalIcon\r\n          >\r\n            Surface\r\n          </Surface>\r\n          <Button as={Link} displayExternalIcon to=\"https://newrelic.com\">\r\n            Button\r\n          </Button>\r\n          <ExternalLink to=\"https://newrelic.com\" displayExternalIcon>\r\n            External Link\r\n          </ExternalLink>\r\n        </section>\r\n        <section>\r\n          <h2>Tables</h2>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <td>Col 1</td>\r\n                <td>Col 2</td>\r\n                <td>Col 3</td>\r\n                <td>Col 4</td>\r\n                <td>Col 5</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Array.from({ length: 10 }, (_, i) => i + 1).map((num) => (\r\n                <tr key={num}>\r\n                  <td>Row {num} - Column 1</td>\r\n                  <td>Row {num} - Column 2</td>\r\n                  <td>Row {num} - Column 3</td>\r\n                  <td>Row {num} - Column 4</td>\r\n                  <td>Row {num} - Column 5</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </section>\r\n\r\n        <section>\r\n          <TagList>\r\n            <Tag>React</Tag>\r\n            <Tag interactive>Agent</Tag>\r\n          </TagList>\r\n        </section>\r\n      </Layout.Content>\r\n      <Layout.PageTools\r\n        css={css`\r\n          @media screen and (max-width: 1280px) {\r\n            display: none;\r\n          }\r\n        `}\r\n      >\r\n        <SimpleFeedback pageTitle=\"Demo Site\" />\r\n        <ContributingGuidelines fileRelativePath=\"demo/src/pages/index.js\" />\r\n        <PageTools.Section>\r\n          <PageTools.Title>How to use</PageTools.Title>\r\n          <p>\r\n            The <code>PageTools</code> component is great for use as a sidebar\r\n            to give page-specific context to a user\r\n          </p>\r\n        </PageTools.Section>\r\n      </Layout.PageTools>\r\n    </Layout.Main>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n"],"names":["t","useTranslation","useState","searchTerm","setSearchTerm","css","style","margin","maxWidth","placeholder","onClear","onChange","e","target","value","size","SearchInput","marginBottom","id","title","defaultOpen","variant","Callout","copyable","lineNumbers","highlightedLines","fileName","language","live","preview","scope","Button","animate","onClick","alert","resources","url","base","Surface","interactive","to","as","Link","type","Video","width","shouldAutoLocalize","displayExternalIcon","Array","from","length","_","i","map","num","key","pageTitle","fileRelativePath"],"sourceRoot":""}